{
  "certificate": {
    "transactionDigest": "+uMnSigjc6O1rcDZ7dx52qzn9c4DUJ1qYsA14GrDm9w=",
    "data": {
      "transactions": [
        {
          "Publish": {
            "disassembled": {
              "calculator": "// Move bytecode v6\nmodule 0.calculator {\n\n\npublic required_collateral_amount<Ty0, Ty1>(Arg0: u64): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: u64)\n\t1: Call[0](usd_value<Ty0>(u64): u64)\n\t2: LdConst[0](U64: [2, 0, 0, 0, 0, 0, 0, 0])\n\t3: Mul\n\t4: StLoc[1](loc0: u64)\n\t5: MoveLoc[1](loc0: u64)\n\t6: LdU64(1)\n\t7: Call[1](usd_value<Ty1>(u64): u64)\n\t8: Div\n\t9: Ret\n}\n}",
              "fake_usdc": "// Move bytecode v6\nmodule 0.fake_usdc {\nstruct USDC has drop {\n\tdummy_field: bool\n}\n\n\n}",
              "market": "// Move bytecode v6\nmodule 0.market {\nstruct BorrowRecord<phantom Ty0, phantom Ty1> has store, key {\n\tid: UID,\n\tborrower: address,\n\tcol_amount: u64,\n\tbor_amount: u64\n}\nstruct ColData has store {\n\tgross: u64,\n\tutilized: u64\n}\nstruct Pool has key {\n\tid: UID,\n\tadmin_address: address,\n\tsubmarket_ids: VecMap<TypeName, ID>,\n\tborrow_record_ids: VecMap<vector<u8>, ID>\n}\nstruct SubMarket<phantom Ty0> has store, key {\n\tid: UID,\n\tbalance: Balance<Ty0>,\n\tcollaterals: VecMap<address, ColData>\n}\n\nadd_col_value(Arg0: &mut VecMap<address, ColData>, Arg1: address, Arg2: u64) {\nL0:\tloc3: &mut ColData\nB0:\n\t0: CopyLoc[0](Arg0: &mut VecMap<address, ColData>)\n\t1: ImmBorrowLoc[1](Arg1: address)\n\t2: StLoc[4](loc1: &address)\n\t3: StLoc[3](loc0: &mut VecMap<address, ColData>)\n\t4: MoveLoc[3](loc0: &mut VecMap<address, ColData>)\n\t5: FreezeRef\n\t6: MoveLoc[4](loc1: &address)\n\t7: Call[0](contains<address, ColData>(&VecMap<address, ColData>, &address): bool)\n\t8: Not\n\t9: BrTrue(11)\nB1:\n\t10: Branch(17)\nB2:\n\t11: CopyLoc[0](Arg0: &mut VecMap<address, ColData>)\n\t12: CopyLoc[1](Arg1: address)\n\t13: LdU64(0)\n\t14: LdU64(0)\n\t15: Pack[1](ColData)\n\t16: Call[1](insert<address, ColData>(&mut VecMap<address, ColData>, address, ColData))\nB3:\n\t17: MoveLoc[0](Arg0: &mut VecMap<address, ColData>)\n\t18: ImmBorrowLoc[1](Arg1: address)\n\t19: Call[2](get_mut<address, ColData>(&mut VecMap<address, ColData>, &address): &mut ColData)\n\t20: StLoc[6](loc3: &mut ColData)\n\t21: CopyLoc[6](loc3: &mut ColData)\n\t22: ImmBorrowField[0](ColData.gross: u64)\n\t23: ReadRef\n\t24: MoveLoc[2](Arg2: u64)\n\t25: Add\n\t26: MoveLoc[6](loc3: &mut ColData)\n\t27: MutBorrowField[0](ColData.gross: u64)\n\t28: WriteRef\n\t29: Ret\n}\npublic borrow<Ty0, Ty1>(Arg0: u64, Arg1: u64, Arg2: &mut Pool, Arg3: &mut TxContext) {\nL0:\tloc4: &mut VecMap<TypeName, ID>\nL1:\tloc5: &mut VecMap<TypeName, ID>\nL2:\tloc6: &TypeName\nL3:\tloc7: TypeName\nL4:\tloc8: &mut VecMap<TypeName, ID>\nL5:\tloc9: &mut VecMap<TypeName, ID>\nL6:\tloc10: &TypeName\nL7:\tloc11: address\nL8:\tloc12: vector<u8>\nL9:\tloc13: SubMarket<Ty0>\nL10:\tloc14: &ID\nL11:\tloc15: BorrowRecord<Ty0, Ty1>\nL12:\tloc16: &mut BorrowRecord<Ty0, Ty1>\nL13:\tloc17: &ID\nL14:\tloc18: Coin<Ty0>\nL15:\tloc19: &mut SubMarket<Ty1>\nL16:\tloc20: &ID\nL17:\tloc21: u64\nL18:\tloc22: u64\nB0:\n\t0: CopyLoc[2](Arg2: &mut Pool)\n\t1: MutBorrowField[1](Pool.submarket_ids: VecMap<TypeName, ID>)\n\t2: StLoc[8](loc4: &mut VecMap<TypeName, ID>)\n\t3: Call[3](get<Ty0>(): TypeName)\n\t4: StLoc[4](loc0: TypeName)\n\t5: MoveLoc[8](loc4: &mut VecMap<TypeName, ID>)\n\t6: ImmBorrowLoc[4](loc0: TypeName)\n\t7: StLoc[10](loc6: &TypeName)\n\t8: StLoc[9](loc5: &mut VecMap<TypeName, ID>)\n\t9: MoveLoc[9](loc5: &mut VecMap<TypeName, ID>)\n\t10: FreezeRef\n\t11: MoveLoc[10](loc6: &TypeName)\n\t12: Call[4](get<TypeName, ID>(&VecMap<TypeName, ID>, &TypeName): &ID)\n\t13: StLoc[18](loc14: &ID)\n\t14: CopyLoc[2](Arg2: &mut Pool)\n\t15: MutBorrowField[1](Pool.submarket_ids: VecMap<TypeName, ID>)\n\t16: StLoc[12](loc8: &mut VecMap<TypeName, ID>)\n\t17: Call[5](get<Ty1>(): TypeName)\n\t18: StLoc[11](loc7: TypeName)\n\t19: MoveLoc[12](loc8: &mut VecMap<TypeName, ID>)\n\t20: ImmBorrowLoc[11](loc7: TypeName)\n\t21: StLoc[14](loc10: &TypeName)\n\t22: StLoc[13](loc9: &mut VecMap<TypeName, ID>)\n\t23: MoveLoc[13](loc9: &mut VecMap<TypeName, ID>)\n\t24: FreezeRef\n\t25: MoveLoc[14](loc10: &TypeName)\n\t26: Call[4](get<TypeName, ID>(&VecMap<TypeName, ID>, &TypeName): &ID)\n\t27: StLoc[24](loc20: &ID)\n\t28: CopyLoc[2](Arg2: &mut Pool)\n\t29: MutBorrowField[2](Pool.id: UID)\n\t30: MoveLoc[18](loc14: &ID)\n\t31: ReadRef\n\t32: Call[6](remove<ID, SubMarket<Ty0>>(&mut UID, ID): SubMarket<Ty0>)\n\t33: StLoc[17](loc13: SubMarket<Ty0>)\n\t34: CopyLoc[2](Arg2: &mut Pool)\n\t35: MutBorrowField[2](Pool.id: UID)\n\t36: MoveLoc[24](loc20: &ID)\n\t37: ReadRef\n\t38: Call[7](borrow_mut<ID, SubMarket<Ty1>>(&mut UID, ID): &mut SubMarket<Ty1>)\n\t39: StLoc[23](loc19: &mut SubMarket<Ty1>)\n\t40: ImmBorrowLoc[17](loc13: SubMarket<Ty0>)\n\t41: ImmBorrowFieldGeneric[0](SubMarket.balance: Balance<Ty0>)\n\t42: Call[8](value<Ty0>(&Balance<Ty0>): u64)\n\t43: CopyLoc[0](Arg0: u64)\n\t44: Ge\n\t45: BrTrue(54)\nB1:\n\t46: MoveLoc[2](Arg2: &mut Pool)\n\t47: Pop\n\t48: MoveLoc[3](Arg3: &mut TxContext)\n\t49: Pop\n\t50: MoveLoc[23](loc19: &mut SubMarket<Ty1>)\n\t51: Pop\n\t52: LdConst[1](U64: [5, 0, 0, 0, 0, 0, 0, 0])\n\t53: Abort\nB2:\n\t54: CopyLoc[3](Arg3: &mut TxContext)\n\t55: FreezeRef\n\t56: Call[20](sender(&TxContext): address)\n\t57: CopyLoc[23](loc19: &mut SubMarket<Ty1>)\n\t58: StLoc[5](loc1: &mut SubMarket<Ty1>)\n\t59: StLoc[15](loc11: address)\n\t60: MoveLoc[15](loc11: address)\n\t61: MoveLoc[5](loc1: &mut SubMarket<Ty1>)\n\t62: FreezeRef\n\t63: Call[9](get_unused_col<Ty1>(address, &SubMarket<Ty1>): u64)\n\t64: StLoc[26](loc22: u64)\n\t65: MoveLoc[26](loc22: u64)\n\t66: CopyLoc[1](Arg1: u64)\n\t67: Ge\n\t68: BrTrue(77)\nB3:\n\t69: MoveLoc[2](Arg2: &mut Pool)\n\t70: Pop\n\t71: MoveLoc[3](Arg3: &mut TxContext)\n\t72: Pop\n\t73: MoveLoc[23](loc19: &mut SubMarket<Ty1>)\n\t74: Pop\n\t75: LdConst[3](U64: [6, 0, 0, 0, 0, 0, 0, 0])\n\t76: Abort\nB4:\n\t77: CopyLoc[0](Arg0: u64)\n\t78: Call[10](required_collateral_amount<Ty0, Ty1>(u64): u64)\n\t79: StLoc[25](loc21: u64)\n\t80: CopyLoc[1](Arg1: u64)\n\t81: MoveLoc[25](loc21: u64)\n\t82: Ge\n\t83: BrTrue(92)\nB5:\n\t84: MoveLoc[2](Arg2: &mut Pool)\n\t85: Pop\n\t86: MoveLoc[3](Arg3: &mut TxContext)\n\t87: Pop\n\t88: MoveLoc[23](loc19: &mut SubMarket<Ty1>)\n\t89: Pop\n\t90: LdConst[6](U64: [7, 0, 0, 0, 0, 0, 0, 0])\n\t91: Abort\nB6:\n\t92: MoveLoc[23](loc19: &mut SubMarket<Ty1>)\n\t93: MutBorrowFieldGeneric[1](SubMarket.collaterals: VecMap<address, ColData>)\n\t94: StLoc[7](loc3: &mut VecMap<address, ColData>)\n\t95: CopyLoc[3](Arg3: &mut TxContext)\n\t96: FreezeRef\n\t97: Call[20](sender(&TxContext): address)\n\t98: StLoc[6](loc2: address)\n\t99: MoveLoc[7](loc3: &mut VecMap<address, ColData>)\n\t100: ImmBorrowLoc[6](loc2: address)\n\t101: CopyLoc[1](Arg1: u64)\n\t102: Call[9](record_new_utilization(&mut VecMap<address, ColData>, &address, u64))\n\t103: CopyLoc[3](Arg3: &mut TxContext)\n\t104: Call[11](build_borrow_record_bytes<Ty0, Ty1>(&mut TxContext): vector<u8>)\n\t105: StLoc[16](loc12: vector<u8>)\n\t106: CopyLoc[2](Arg2: &mut Pool)\n\t107: ImmBorrowField[5](Pool.borrow_record_ids: VecMap<vector<u8>, ID>)\n\t108: ImmBorrowLoc[16](loc12: vector<u8>)\n\t109: Call[12](contains<vector<u8>, ID>(&VecMap<vector<u8>, ID>, &vector<u8>): bool)\n\t110: Not\n\t111: BrTrue(113)\nB7:\n\t112: Branch(136)\nB8:\n\t113: CopyLoc[3](Arg3: &mut TxContext)\n\t114: Call[22](new(&mut TxContext): UID)\n\t115: CopyLoc[3](Arg3: &mut TxContext)\n\t116: FreezeRef\n\t117: Call[20](sender(&TxContext): address)\n\t118: MoveLoc[1](Arg1: u64)\n\t119: CopyLoc[0](Arg0: u64)\n\t120: PackGeneric[0](BorrowRecord<Ty0, Ty1>)\n\t121: StLoc[19](loc15: BorrowRecord<Ty0, Ty1>)\n\t122: CopyLoc[2](Arg2: &mut Pool)\n\t123: MutBorrowField[5](Pool.borrow_record_ids: VecMap<vector<u8>, ID>)\n\t124: MoveLoc[16](loc12: vector<u8>)\n\t125: ImmBorrowLoc[19](loc15: BorrowRecord<Ty0, Ty1>)\n\t126: ImmBorrowFieldGeneric[2](BorrowRecord.id: UID)\n\t127: Call[23](uid_to_inner(&UID): ID)\n\t128: Call[13](insert<vector<u8>, ID>(&mut VecMap<vector<u8>, ID>, vector<u8>, ID))\n\t129: CopyLoc[2](Arg2: &mut Pool)\n\t130: MutBorrowField[2](Pool.id: UID)\n\t131: ImmBorrowLoc[19](loc15: BorrowRecord<Ty0, Ty1>)\n\t132: Call[14](id<BorrowRecord<Ty0, Ty1>>(&BorrowRecord<Ty0, Ty1>): ID)\n\t133: MoveLoc[19](loc15: BorrowRecord<Ty0, Ty1>)\n\t134: Call[15](add<ID, BorrowRecord<Ty0, Ty1>>(&mut UID, ID, BorrowRecord<Ty0, Ty1>))\n\t135: Branch(163)\nB9:\n\t136: CopyLoc[2](Arg2: &mut Pool)\n\t137: ImmBorrowField[5](Pool.borrow_record_ids: VecMap<vector<u8>, ID>)\n\t138: ImmBorrowLoc[16](loc12: vector<u8>)\n\t139: Call[16](get<vector<u8>, ID>(&VecMap<vector<u8>, ID>, &vector<u8>): &ID)\n\t140: StLoc[21](loc17: &ID)\n\t141: CopyLoc[2](Arg2: &mut Pool)\n\t142: MutBorrowField[2](Pool.id: UID)\n\t143: MoveLoc[21](loc17: &ID)\n\t144: ReadRef\n\t145: Call[17](borrow_mut<ID, BorrowRecord<Ty0, Ty1>>(&mut UID, ID): &mut BorrowRecord<Ty0, Ty1>)\n\t146: StLoc[20](loc16: &mut BorrowRecord<Ty0, Ty1>)\n\t147: CopyLoc[20](loc16: &mut BorrowRecord<Ty0, Ty1>)\n\t148: ImmBorrowFieldGeneric[3](BorrowRecord.bor_amount: u64)\n\t149: ReadRef\n\t150: CopyLoc[0](Arg0: u64)\n\t151: Add\n\t152: CopyLoc[20](loc16: &mut BorrowRecord<Ty0, Ty1>)\n\t153: MutBorrowFieldGeneric[3](BorrowRecord.bor_amount: u64)\n\t154: WriteRef\n\t155: CopyLoc[20](loc16: &mut BorrowRecord<Ty0, Ty1>)\n\t156: ImmBorrowFieldGeneric[4](BorrowRecord.col_amount: u64)\n\t157: ReadRef\n\t158: MoveLoc[1](Arg1: u64)\n\t159: Add\n\t160: MoveLoc[20](loc16: &mut BorrowRecord<Ty0, Ty1>)\n\t161: MutBorrowFieldGeneric[4](BorrowRecord.col_amount: u64)\n\t162: WriteRef\nB10:\n\t163: MutBorrowLoc[17](loc13: SubMarket<Ty0>)\n\t164: MutBorrowFieldGeneric[0](SubMarket.balance: Balance<Ty0>)\n\t165: MoveLoc[0](Arg0: u64)\n\t166: CopyLoc[3](Arg3: &mut TxContext)\n\t167: Call[18](take<Ty0>(&mut Balance<Ty0>, u64, &mut TxContext): Coin<Ty0>)\n\t168: StLoc[22](loc18: Coin<Ty0>)\n\t169: MoveLoc[2](Arg2: &mut Pool)\n\t170: MutBorrowField[2](Pool.id: UID)\n\t171: ImmBorrowLoc[17](loc13: SubMarket<Ty0>)\n\t172: Call[19](id<SubMarket<Ty0>>(&SubMarket<Ty0>): ID)\n\t173: MoveLoc[17](loc13: SubMarket<Ty0>)\n\t174: Call[20](add<ID, SubMarket<Ty0>>(&mut UID, ID, SubMarket<Ty0>))\n\t175: MoveLoc[22](loc18: Coin<Ty0>)\n\t176: MoveLoc[3](Arg3: &mut TxContext)\n\t177: FreezeRef\n\t178: Call[20](sender(&TxContext): address)\n\t179: Call[21](transfer<Coin<Ty0>>(Coin<Ty0>, address))\n\t180: Ret\n}\nbuild_borrow_record_bytes<Ty0, Ty1>(Arg0: &mut TxContext): vector<u8> {\nL0:\tloc1: vector<u8>\nL1:\tloc2: vector<u8>\nL2:\tloc3: String\nB0:\n\t0: MoveLoc[0](Arg0: &mut TxContext)\n\t1: FreezeRef\n\t2: Call[20](sender(&TxContext): address)\n\t3: StLoc[1](loc0: address)\n\t4: ImmBorrowLoc[1](loc0: address)\n\t5: Call[22](to_bytes<address>(&address): vector<u8>)\n\t6: StLoc[2](loc1: vector<u8>)\n\t7: Call[23](get<BorrowRecord<Ty0, Ty1>>(): TypeName)\n\t8: Call[29](into_string(TypeName): String)\n\t9: StLoc[4](loc3: String)\n\t10: MoveLoc[4](loc3: String)\n\t11: Call[30](into_bytes(String): vector<u8>)\n\t12: StLoc[3](loc2: vector<u8>)\n\t13: MutBorrowLoc[2](loc1: vector<u8>)\n\t14: MoveLoc[3](loc2: vector<u8>)\n\t15: Call[24](append<u8>(&mut vector<u8>, vector<u8>))\n\t16: MoveLoc[2](loc1: vector<u8>)\n\t17: Ret\n}\ncheck_admin(Arg0: &Pool, Arg1: address) {\nB0:\n\t0: MoveLoc[0](Arg0: &Pool)\n\t1: ImmBorrowField[9](Pool.admin_address: address)\n\t2: ReadRef\n\t3: MoveLoc[1](Arg1: address)\n\t4: Eq\n\t5: BrTrue(8)\nB1:\n\t6: LdConst[0](U64: [1, 0, 0, 0, 0, 0, 0, 0])\n\t7: Abort\nB2:\n\t8: Ret\n}\nentry public create_pool(Arg0: &mut TxContext) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut TxContext)\n\t1: Call[22](new(&mut TxContext): UID)\n\t2: MoveLoc[0](Arg0: &mut TxContext)\n\t3: FreezeRef\n\t4: Call[20](sender(&TxContext): address)\n\t5: Call[25](empty<TypeName, ID>(): VecMap<TypeName, ID>)\n\t6: Call[26](empty<vector<u8>, ID>(): VecMap<vector<u8>, ID>)\n\t7: Pack[2](Pool)\n\t8: StLoc[1](loc0: Pool)\n\t9: MoveLoc[1](loc0: Pool)\n\t10: Call[27](share_object<Pool>(Pool))\n\t11: Ret\n}\nentry public create_sub_market<Ty0>(Arg0: &mut Pool, Arg1: &mut TxContext) {\nL0:\tloc2: SubMarket<Ty0>\nB0:\n\t0: CopyLoc[0](Arg0: &mut Pool)\n\t1: CopyLoc[1](Arg1: &mut TxContext)\n\t2: FreezeRef\n\t3: Call[20](sender(&TxContext): address)\n\t4: StLoc[3](loc1: address)\n\t5: StLoc[2](loc0: &mut Pool)\n\t6: MoveLoc[2](loc0: &mut Pool)\n\t7: FreezeRef\n\t8: MoveLoc[3](loc1: address)\n\t9: Call[3](check_admin(&Pool, address))\n\t10: MoveLoc[1](Arg1: &mut TxContext)\n\t11: Call[22](new(&mut TxContext): UID)\n\t12: Call[28](zero<Ty0>(): Balance<Ty0>)\n\t13: Call[29](empty<address, ColData>(): VecMap<address, ColData>)\n\t14: PackGeneric[1](SubMarket<Ty0>)\n\t15: StLoc[4](loc2: SubMarket<Ty0>)\n\t16: CopyLoc[0](Arg0: &mut Pool)\n\t17: MutBorrowField[1](Pool.submarket_ids: VecMap<TypeName, ID>)\n\t18: Call[3](get<Ty0>(): TypeName)\n\t19: ImmBorrowLoc[4](loc2: SubMarket<Ty0>)\n\t20: Call[19](id<SubMarket<Ty0>>(&SubMarket<Ty0>): ID)\n\t21: Call[30](insert<TypeName, ID>(&mut VecMap<TypeName, ID>, TypeName, ID))\n\t22: MoveLoc[0](Arg0: &mut Pool)\n\t23: MutBorrowField[2](Pool.id: UID)\n\t24: ImmBorrowLoc[4](loc2: SubMarket<Ty0>)\n\t25: Call[19](id<SubMarket<Ty0>>(&SubMarket<Ty0>): ID)\n\t26: MoveLoc[4](loc2: SubMarket<Ty0>)\n\t27: Call[20](add<ID, SubMarket<Ty0>>(&mut UID, ID, SubMarket<Ty0>))\n\t28: Ret\n}\nentry public deposit_collateral<Ty0>(Arg0: &mut Pool, Arg1: Coin<Ty0>, Arg2: &mut TxContext) {\nL0:\tloc3: u64\nL1:\tloc4: &mut SubMarket<Ty0>\nL2:\tloc5: &ID\nB0:\n\t0: CopyLoc[0](Arg0: &mut Pool)\n\t1: ImmBorrowField[1](Pool.submarket_ids: VecMap<TypeName, ID>)\n\t2: StLoc[4](loc1: &VecMap<TypeName, ID>)\n\t3: Call[3](get<Ty0>(): TypeName)\n\t4: StLoc[3](loc0: TypeName)\n\t5: MoveLoc[4](loc1: &VecMap<TypeName, ID>)\n\t6: ImmBorrowLoc[3](loc0: TypeName)\n\t7: Call[4](get<TypeName, ID>(&VecMap<TypeName, ID>, &TypeName): &ID)\n\t8: StLoc[8](loc5: &ID)\n\t9: MoveLoc[0](Arg0: &mut Pool)\n\t10: MutBorrowField[2](Pool.id: UID)\n\t11: MoveLoc[8](loc5: &ID)\n\t12: ReadRef\n\t13: Call[31](borrow_mut<ID, SubMarket<Ty0>>(&mut UID, ID): &mut SubMarket<Ty0>)\n\t14: StLoc[7](loc4: &mut SubMarket<Ty0>)\n\t15: MoveLoc[1](Arg1: Coin<Ty0>)\n\t16: Call[32](into_balance<Ty0>(Coin<Ty0>): Balance<Ty0>)\n\t17: StLoc[5](loc2: Balance<Ty0>)\n\t18: ImmBorrowLoc[5](loc2: Balance<Ty0>)\n\t19: Call[8](value<Ty0>(&Balance<Ty0>): u64)\n\t20: StLoc[6](loc3: u64)\n\t21: CopyLoc[6](loc3: u64)\n\t22: LdU64(0)\n\t23: Gt\n\t24: BrTrue(31)\nB1:\n\t25: MoveLoc[7](loc4: &mut SubMarket<Ty0>)\n\t26: Pop\n\t27: MoveLoc[2](Arg2: &mut TxContext)\n\t28: Pop\n\t29: LdConst[9](U64: [3, 0, 0, 0, 0, 0, 0, 0])\n\t30: Abort\nB2:\n\t31: CopyLoc[7](loc4: &mut SubMarket<Ty0>)\n\t32: MutBorrowFieldGeneric[0](SubMarket.balance: Balance<Ty0>)\n\t33: MoveLoc[5](loc2: Balance<Ty0>)\n\t34: Call[33](join<Ty0>(&mut Balance<Ty0>, Balance<Ty0>): u64)\n\t35: Pop\n\t36: MoveLoc[7](loc4: &mut SubMarket<Ty0>)\n\t37: MutBorrowFieldGeneric[5](SubMarket.collaterals: VecMap<address, ColData>)\n\t38: MoveLoc[2](Arg2: &mut TxContext)\n\t39: FreezeRef\n\t40: Call[20](sender(&TxContext): address)\n\t41: MoveLoc[6](loc3: u64)\n\t42: Call[0](add_col_value(&mut VecMap<address, ColData>, address, u64))\n\t43: Ret\n}\npublic get_unused_col<Ty0>(Arg0: address, Arg1: &SubMarket<Ty0>): u64 {\nB0:\n\t0: CopyLoc[1](Arg1: &SubMarket<Ty0>)\n\t1: ImmBorrowFieldGeneric[5](SubMarket.collaterals: VecMap<address, ColData>)\n\t2: ImmBorrowLoc[0](Arg0: address)\n\t3: Call[0](contains<address, ColData>(&VecMap<address, ColData>, &address): bool)\n\t4: Not\n\t5: BrTrue(7)\nB1:\n\t6: Branch(12)\nB2:\n\t7: MoveLoc[1](Arg1: &SubMarket<Ty0>)\n\t8: Pop\n\t9: LdU64(0)\n\t10: StLoc[2](loc0: u64)\n\t11: Branch(57)\nB3:\n\t12: MoveLoc[1](Arg1: &SubMarket<Ty0>)\n\t13: ImmBorrowFieldGeneric[5](SubMarket.collaterals: VecMap<address, ColData>)\n\t14: ImmBorrowLoc[0](Arg0: address)\n\t15: Call[34](get<address, ColData>(&VecMap<address, ColData>, &address): &ColData)\n\t16: StLoc[3](loc1: &ColData)\n\t17: CopyLoc[3](loc1: &ColData)\n\t18: ImmBorrowField[0](ColData.gross: u64)\n\t19: ReadRef\n\t20: CopyLoc[3](loc1: &ColData)\n\t21: ImmBorrowField[10](ColData.utilized: u64)\n\t22: ReadRef\n\t23: Ge\n\t24: BrTrue(29)\nB4:\n\t25: MoveLoc[3](loc1: &ColData)\n\t26: Pop\n\t27: LdConst[4](U64: [4, 0, 0, 0, 0, 0, 0, 0])\n\t28: Abort\nB5:\n\t29: CopyLoc[3](loc1: &ColData)\n\t30: ImmBorrowField[0](ColData.gross: u64)\n\t31: ReadRef\n\t32: LdU64(0)\n\t33: Gt\n\t34: BrTrue(39)\nB6:\n\t35: MoveLoc[3](loc1: &ColData)\n\t36: Pop\n\t37: LdConst[4](U64: [4, 0, 0, 0, 0, 0, 0, 0])\n\t38: Abort\nB7:\n\t39: CopyLoc[3](loc1: &ColData)\n\t40: ImmBorrowField[10](ColData.utilized: u64)\n\t41: ReadRef\n\t42: LdU64(0)\n\t43: Ge\n\t44: BrTrue(49)\nB8:\n\t45: MoveLoc[3](loc1: &ColData)\n\t46: Pop\n\t47: LdConst[4](U64: [4, 0, 0, 0, 0, 0, 0, 0])\n\t48: Abort\nB9:\n\t49: CopyLoc[3](loc1: &ColData)\n\t50: ImmBorrowField[0](ColData.gross: u64)\n\t51: ReadRef\n\t52: MoveLoc[3](loc1: &ColData)\n\t53: ImmBorrowField[10](ColData.utilized: u64)\n\t54: ReadRef\n\t55: Sub\n\t56: StLoc[2](loc0: u64)\nB10:\n\t57: MoveLoc[2](loc0: u64)\n\t58: Ret\n}\nis_healthy<Ty0, Ty1>(Arg0: u64, Arg1: u64): bool {\nB0:\n\t0: MoveLoc[0](Arg0: u64)\n\t1: Call[10](required_collateral_amount<Ty0, Ty1>(u64): u64)\n\t2: StLoc[2](loc0: u64)\n\t3: MoveLoc[1](Arg1: u64)\n\t4: MoveLoc[2](loc0: u64)\n\t5: Ge\n\t6: Ret\n}\nrecord_new_utilization(Arg0: &mut VecMap<address, ColData>, Arg1: &address, Arg2: u64) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut VecMap<address, ColData>)\n\t1: CopyLoc[1](Arg1: &address)\n\t2: StLoc[4](loc1: &address)\n\t3: StLoc[3](loc0: &mut VecMap<address, ColData>)\n\t4: MoveLoc[3](loc0: &mut VecMap<address, ColData>)\n\t5: FreezeRef\n\t6: MoveLoc[4](loc1: &address)\n\t7: Call[0](contains<address, ColData>(&VecMap<address, ColData>, &address): bool)\n\t8: LdTrue\n\t9: Eq\n\t10: BrTrue(17)\nB1:\n\t11: MoveLoc[1](Arg1: &address)\n\t12: Pop\n\t13: MoveLoc[0](Arg0: &mut VecMap<address, ColData>)\n\t14: Pop\n\t15: LdConst[5](U64: [8, 0, 0, 0, 0, 0, 0, 0])\n\t16: Abort\nB2:\n\t17: MoveLoc[0](Arg0: &mut VecMap<address, ColData>)\n\t18: MoveLoc[1](Arg1: &address)\n\t19: Call[2](get_mut<address, ColData>(&mut VecMap<address, ColData>, &address): &mut ColData)\n\t20: StLoc[5](loc2: &mut ColData)\n\t21: CopyLoc[5](loc2: &mut ColData)\n\t22: ImmBorrowField[0](ColData.gross: u64)\n\t23: ReadRef\n\t24: CopyLoc[2](Arg2: u64)\n\t25: CopyLoc[5](loc2: &mut ColData)\n\t26: ImmBorrowField[10](ColData.utilized: u64)\n\t27: ReadRef\n\t28: Add\n\t29: Ge\n\t30: BrTrue(35)\nB3:\n\t31: MoveLoc[5](loc2: &mut ColData)\n\t32: Pop\n\t33: LdConst[3](U64: [6, 0, 0, 0, 0, 0, 0, 0])\n\t34: Abort\nB4:\n\t35: CopyLoc[5](loc2: &mut ColData)\n\t36: ImmBorrowField[10](ColData.utilized: u64)\n\t37: ReadRef\n\t38: MoveLoc[2](Arg2: u64)\n\t39: Add\n\t40: MoveLoc[5](loc2: &mut ColData)\n\t41: MutBorrowField[10](ColData.utilized: u64)\n\t42: WriteRef\n\t43: Ret\n}\nrecord_repay(Arg0: &mut VecMap<address, ColData>, Arg1: &address, Arg2: u64) {\nB0:\n\t0: MoveLoc[0](Arg0: &mut VecMap<address, ColData>)\n\t1: MoveLoc[1](Arg1: &address)\n\t2: Call[2](get_mut<address, ColData>(&mut VecMap<address, ColData>, &address): &mut ColData)\n\t3: StLoc[3](loc0: &mut ColData)\n\t4: CopyLoc[3](loc0: &mut ColData)\n\t5: ImmBorrowField[10](ColData.utilized: u64)\n\t6: ReadRef\n\t7: CopyLoc[2](Arg2: u64)\n\t8: Ge\n\t9: BrTrue(14)\nB1:\n\t10: MoveLoc[3](loc0: &mut ColData)\n\t11: Pop\n\t12: LdConst[3](U64: [6, 0, 0, 0, 0, 0, 0, 0])\n\t13: Abort\nB2:\n\t14: CopyLoc[3](loc0: &mut ColData)\n\t15: ImmBorrowField[10](ColData.utilized: u64)\n\t16: ReadRef\n\t17: MoveLoc[2](Arg2: u64)\n\t18: Sub\n\t19: MoveLoc[3](loc0: &mut ColData)\n\t20: MutBorrowField[10](ColData.utilized: u64)\n\t21: WriteRef\n\t22: Ret\n}\nentry public repay<Ty0, Ty1>(Arg0: Coin<Ty0>, Arg1: u64, Arg2: &mut Pool, Arg3: &mut TxContext) {\nL0:\tloc4: TypeName\nL1:\tloc5: &VecMap<TypeName, ID>\nL2:\tloc6: address\nL3:\tloc7: &mut VecMap<address, ColData>\nL4:\tloc8: u64\nL5:\tloc9: &BorrowRecord<Ty0, Ty1>\nL6:\tloc10: &ID\nL7:\tloc11: SubMarket<Ty0>\nL8:\tloc12: &ID\nL9:\tloc13: u64\nL10:\tloc14: SubMarket<Ty1>\nL11:\tloc15: &ID\nL12:\tloc16: Balance<Ty0>\nL13:\tloc17: u64\nB0:\n\t0: MoveLoc[0](Arg0: Coin<Ty0>)\n\t1: Call[32](into_balance<Ty0>(Coin<Ty0>): Balance<Ty0>)\n\t2: StLoc[20](loc16: Balance<Ty0>)\n\t3: ImmBorrowLoc[20](loc16: Balance<Ty0>)\n\t4: Call[8](value<Ty0>(&Balance<Ty0>): u64)\n\t5: StLoc[21](loc17: u64)\n\t6: CopyLoc[2](Arg2: &mut Pool)\n\t7: ImmBorrowField[5](Pool.borrow_record_ids: VecMap<vector<u8>, ID>)\n\t8: StLoc[5](loc1: &VecMap<vector<u8>, ID>)\n\t9: CopyLoc[3](Arg3: &mut TxContext)\n\t10: Call[11](build_borrow_record_bytes<Ty0, Ty1>(&mut TxContext): vector<u8>)\n\t11: StLoc[4](loc0: vector<u8>)\n\t12: MoveLoc[5](loc1: &VecMap<vector<u8>, ID>)\n\t13: ImmBorrowLoc[4](loc0: vector<u8>)\n\t14: Call[16](get<vector<u8>, ID>(&VecMap<vector<u8>, ID>, &vector<u8>): &ID)\n\t15: StLoc[14](loc10: &ID)\n\t16: CopyLoc[2](Arg2: &mut Pool)\n\t17: ImmBorrowField[2](Pool.id: UID)\n\t18: MoveLoc[14](loc10: &ID)\n\t19: ReadRef\n\t20: Call[35](borrow<ID, BorrowRecord<Ty0, Ty1>>(&UID, ID): &BorrowRecord<Ty0, Ty1>)\n\t21: StLoc[13](loc9: &BorrowRecord<Ty0, Ty1>)\n\t22: CopyLoc[13](loc9: &BorrowRecord<Ty0, Ty1>)\n\t23: ImmBorrowFieldGeneric[6](BorrowRecord.borrower: address)\n\t24: ReadRef\n\t25: CopyLoc[3](Arg3: &mut TxContext)\n\t26: FreezeRef\n\t27: Call[20](sender(&TxContext): address)\n\t28: Eq\n\t29: BrTrue(38)\nB1:\n\t30: MoveLoc[2](Arg2: &mut Pool)\n\t31: Pop\n\t32: MoveLoc[3](Arg3: &mut TxContext)\n\t33: Pop\n\t34: MoveLoc[13](loc9: &BorrowRecord<Ty0, Ty1>)\n\t35: Pop\n\t36: LdConst[8](U64: [9, 0, 0, 0, 0, 0, 0, 0])\n\t37: Abort\nB2:\n\t38: CopyLoc[13](loc9: &BorrowRecord<Ty0, Ty1>)\n\t39: ImmBorrowFieldGeneric[3](BorrowRecord.bor_amount: u64)\n\t40: ReadRef\n\t41: CopyLoc[21](loc17: u64)\n\t42: Ge\n\t43: BrTrue(52)\nB3:\n\t44: MoveLoc[2](Arg2: &mut Pool)\n\t45: Pop\n\t46: MoveLoc[3](Arg3: &mut TxContext)\n\t47: Pop\n\t48: MoveLoc[13](loc9: &BorrowRecord<Ty0, Ty1>)\n\t49: Pop\n\t50: LdU64(1)\n\t51: Abort\nB4:\n\t52: CopyLoc[13](loc9: &BorrowRecord<Ty0, Ty1>)\n\t53: ImmBorrowFieldGeneric[4](BorrowRecord.col_amount: u64)\n\t54: ReadRef\n\t55: CopyLoc[1](Arg1: u64)\n\t56: Ge\n\t57: BrTrue(66)\nB5:\n\t58: MoveLoc[2](Arg2: &mut Pool)\n\t59: Pop\n\t60: MoveLoc[3](Arg3: &mut TxContext)\n\t61: Pop\n\t62: MoveLoc[13](loc9: &BorrowRecord<Ty0, Ty1>)\n\t63: Pop\n\t64: LdU64(1)\n\t65: Abort\nB6:\n\t66: CopyLoc[13](loc9: &BorrowRecord<Ty0, Ty1>)\n\t67: ImmBorrowFieldGeneric[3](BorrowRecord.bor_amount: u64)\n\t68: ReadRef\n\t69: MoveLoc[21](loc17: u64)\n\t70: Sub\n\t71: StLoc[12](loc8: u64)\n\t72: MoveLoc[13](loc9: &BorrowRecord<Ty0, Ty1>)\n\t73: ImmBorrowFieldGeneric[4](BorrowRecord.col_amount: u64)\n\t74: ReadRef\n\t75: CopyLoc[1](Arg1: u64)\n\t76: Sub\n\t77: StLoc[17](loc13: u64)\n\t78: MoveLoc[12](loc8: u64)\n\t79: MoveLoc[17](loc13: u64)\n\t80: Call[36](is_healthy<Ty0, Ty1>(u64, u64): bool)\n\t81: LdTrue\n\t82: Eq\n\t83: BrTrue(90)\nB7:\n\t84: MoveLoc[2](Arg2: &mut Pool)\n\t85: Pop\n\t86: MoveLoc[3](Arg3: &mut TxContext)\n\t87: Pop\n\t88: LdConst[7](U64: [10, 0, 0, 0, 0, 0, 0, 0])\n\t89: Abort\nB8:\n\t90: CopyLoc[2](Arg2: &mut Pool)\n\t91: ImmBorrowField[1](Pool.submarket_ids: VecMap<TypeName, ID>)\n\t92: StLoc[7](loc3: &VecMap<TypeName, ID>)\n\t93: Call[3](get<Ty0>(): TypeName)\n\t94: StLoc[6](loc2: TypeName)\n\t95: MoveLoc[7](loc3: &VecMap<TypeName, ID>)\n\t96: ImmBorrowLoc[6](loc2: TypeName)\n\t97: Call[4](get<TypeName, ID>(&VecMap<TypeName, ID>, &TypeName): &ID)\n\t98: StLoc[16](loc12: &ID)\n\t99: CopyLoc[2](Arg2: &mut Pool)\n\t100: MutBorrowField[2](Pool.id: UID)\n\t101: MoveLoc[16](loc12: &ID)\n\t102: ReadRef\n\t103: Call[6](remove<ID, SubMarket<Ty0>>(&mut UID, ID): SubMarket<Ty0>)\n\t104: StLoc[15](loc11: SubMarket<Ty0>)\n\t105: CopyLoc[2](Arg2: &mut Pool)\n\t106: ImmBorrowField[1](Pool.submarket_ids: VecMap<TypeName, ID>)\n\t107: StLoc[9](loc5: &VecMap<TypeName, ID>)\n\t108: Call[5](get<Ty1>(): TypeName)\n\t109: StLoc[8](loc4: TypeName)\n\t110: MoveLoc[9](loc5: &VecMap<TypeName, ID>)\n\t111: ImmBorrowLoc[8](loc4: TypeName)\n\t112: Call[4](get<TypeName, ID>(&VecMap<TypeName, ID>, &TypeName): &ID)\n\t113: StLoc[19](loc15: &ID)\n\t114: CopyLoc[2](Arg2: &mut Pool)\n\t115: MutBorrowField[2](Pool.id: UID)\n\t116: MoveLoc[19](loc15: &ID)\n\t117: ReadRef\n\t118: Call[37](remove<ID, SubMarket<Ty1>>(&mut UID, ID): SubMarket<Ty1>)\n\t119: StLoc[18](loc14: SubMarket<Ty1>)\n\t120: MutBorrowLoc[18](loc14: SubMarket<Ty1>)\n\t121: MutBorrowFieldGeneric[1](SubMarket.collaterals: VecMap<address, ColData>)\n\t122: StLoc[11](loc7: &mut VecMap<address, ColData>)\n\t123: CopyLoc[3](Arg3: &mut TxContext)\n\t124: FreezeRef\n\t125: Call[20](sender(&TxContext): address)\n\t126: StLoc[10](loc6: address)\n\t127: MoveLoc[11](loc7: &mut VecMap<address, ColData>)\n\t128: ImmBorrowLoc[10](loc6: address)\n\t129: MoveLoc[1](Arg1: u64)\n\t130: Call[10](record_repay(&mut VecMap<address, ColData>, &address, u64))\n\t131: MutBorrowLoc[15](loc11: SubMarket<Ty0>)\n\t132: MutBorrowFieldGeneric[0](SubMarket.balance: Balance<Ty0>)\n\t133: MoveLoc[20](loc16: Balance<Ty0>)\n\t134: MoveLoc[3](Arg3: &mut TxContext)\n\t135: Call[38](from_balance<Ty0>(Balance<Ty0>, &mut TxContext): Coin<Ty0>)\n\t136: Call[39](put<Ty0>(&mut Balance<Ty0>, Coin<Ty0>))\n\t137: CopyLoc[2](Arg2: &mut Pool)\n\t138: MutBorrowField[2](Pool.id: UID)\n\t139: ImmBorrowLoc[15](loc11: SubMarket<Ty0>)\n\t140: Call[19](id<SubMarket<Ty0>>(&SubMarket<Ty0>): ID)\n\t141: MoveLoc[15](loc11: SubMarket<Ty0>)\n\t142: Call[20](add<ID, SubMarket<Ty0>>(&mut UID, ID, SubMarket<Ty0>))\n\t143: MoveLoc[2](Arg2: &mut Pool)\n\t144: MutBorrowField[2](Pool.id: UID)\n\t145: ImmBorrowLoc[18](loc14: SubMarket<Ty1>)\n\t146: Call[40](id<SubMarket<Ty1>>(&SubMarket<Ty1>): ID)\n\t147: MoveLoc[18](loc14: SubMarket<Ty1>)\n\t148: Call[41](add<ID, SubMarket<Ty1>>(&mut UID, ID, SubMarket<Ty1>))\n\t149: Ret\n}\n}",
              "oracle": "// Move bytecode v6\nmodule 0.oracle {\n\n\npublic usd_value<Ty0>(Arg0: u64): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: u64)\n\t1: Ret\n}\n}"
            }
          }
        }
      ],
      "sender": "0x5f108152ab715340c856079f19bb93620241f584",
      "gasPayment": {
        "objectId": "0x1980daf0eee974c32e6dfdc314f6ee4df7791e76",
        "version": 25,
        "digest": "vL/HCGmozySpooJtO5PuDku37si2XZwGUsiS+MxcAvY="
      },
      "gasBudget": 30000
    },
    "txSignature": "AP2W1ERteqc5WeK9cwpYLhD8Rdj5jWpBWmjOig3g2vCb0MMwwcmAq+xai289H2ZWmCF0NKzj65iMbFx6TLkBXQrUBwDmG3WPxcNqxxKh8P2hijJd3BeafJISXbxd3UgtYQ==",
    "authSignInfo": {
      "epoch": 0,
      "signature": "pBkQlTHDCP4mXqhUOajhNlz4LX/JQi3vIdOKUnV+ynUWJCpL4E3aGwmB1f1PgoSB",
      "signers_map": [
        58,
        48,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        2,
        0,
        16,
        0,
        0,
        0,
        1,
        0,
        2,
        0,
        3,
        0
      ]
    }
  },
  "effects": {
    "status": {
      "status": "success"
    },
    "gasUsed": {
      "computationCost": 1156,
      "storageCost": 392,
      "storageRebate": 16
    },
    "transactionDigest": "+uMnSigjc6O1rcDZ7dx52qzn9c4DUJ1qYsA14GrDm9w=",
    "created": [
      {
        "owner": "Immutable",
        "reference": {
          "objectId": "0xa103990c02de466bfb19a00d0566300050ee84cd",
          "version": 1,
          "digest": "7VX5Dzy2JvKhqYZHwpxLOlgg1V4YXhVbXqS+sb72g04="
        }
      }
    ],
    "mutated": [
      {
        "owner": {
          "AddressOwner": "0x5f108152ab715340c856079f19bb93620241f584"
        },
        "reference": {
          "objectId": "0x1980daf0eee974c32e6dfdc314f6ee4df7791e76",
          "version": 26,
          "digest": "jmW8m8SU7dZK2NcBVQtc8zDY7Xo8EPs7SXY4DwsxVf8="
        }
      }
    ],
    "gasObject": {
      "owner": {
        "AddressOwner": "0x5f108152ab715340c856079f19bb93620241f584"
      },
      "reference": {
        "objectId": "0x1980daf0eee974c32e6dfdc314f6ee4df7791e76",
        "version": 26,
        "digest": "jmW8m8SU7dZK2NcBVQtc8zDY7Xo8EPs7SXY4DwsxVf8="
      }
    },
    "events": [
      {
        "coinBalanceChange": {
          "packageId": "0x0000000000000000000000000000000000000002",
          "transactionModule": "gas",
          "sender": "0x5f108152ab715340c856079f19bb93620241f584",
          "changeType": "Gas",
          "owner": {
            "AddressOwner": "0x5f108152ab715340c856079f19bb93620241f584"
          },
          "coinType": "0x2::sui::SUI",
          "coinObjectId": "0x1980daf0eee974c32e6dfdc314f6ee4df7791e76",
          "version": 25,
          "amount": -1532
        }
      },
      {
        "publish": {
          "sender": "0x5f108152ab715340c856079f19bb93620241f584",
          "packageId": "0xa103990c02de466bfb19a00d0566300050ee84cd"
        }
      }
    ],
    "dependencies": [
      "ZBDmGidrY9pZnRQirJ43qMsO112fm2JaJOske9NvE3I="
    ]
  },
  "timestamp_ms": null,
  "parsed_data": null
}
